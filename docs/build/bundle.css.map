{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../src/components/App.svelte",
    "../../src/components/Result.svelte",
    "../../src/components/Reset.svelte",
    "../../src/components/Players.svelte",
    "../../src/components/Board.svelte",
    "../../src/components/Button.svelte",
    "../../src/components/BoardButton.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import { writable } from 'svelte/store';\n    import { draw } from 'svelte/transition';\n    import { quintOut } from 'svelte/easing';\n    import Board from './Board.svelte';\n    import Players from './Players.svelte';\n    import Reset from './Reset.svelte';\n    import Result from './Result.svelte';\n    import { ACTION_TYPE_RESET, ACTION_TYPE_UNDO, ACTION_TYPE_SELECT } from '../state';\n\n    export let store;\n\n    const completed = writable(false);\n    const setComplete = () => completed.set(true);\n\n    const select = (position) => store.dispatch({\n        type: ACTION_TYPE_SELECT,\n        position,\n    });\n    const undo = () => store.dispatch({ type: ACTION_TYPE_UNDO });\n    const reset = () => {\n        store.dispatch({ type: ACTION_TYPE_RESET });\n        completed.set(false);\n    }\n</script>\n\n<div class=\"app\">\n    <div class=\"board\">\n        <svg \n        viewBox=\"0 0 300 300\" \n        xmlns=\"http://www.w3.org/2000/svg\" \n        preserveAspectRatio=\"xMinYMin meet\"\n        width=\"300\" \n        height=\"300\" >\n            {#if !$completed}\n            <Board\n                board=\"{$store.board}\"\n                finished=\"{$store.finished}\"\n                winningPattern=\"{$store.winningPattern}\"\n                onSelect=\"{select}\"\n                onComplete=\"{setComplete}\" />\n            {/if}\n            <Result \n                finished=\"{$store.finished}\" \n                winner=\"{$store.winner}\" />\n        </svg>\n    </div>\n    <div class=\"toolbar\">\n        {#if !$store.finished}\n        <Players \n            player=\"{$store.player}\" \n            hasHistory=\"{$store.history.length !== 0}\" \n            onUndo=\"{undo}\" />\n        {/if}\n        {#if $store.history.length > 0}\n        <Reset onReset=\"{reset}\" />\n        {/if}\n    </div>\n</div>\n\n\n<style>\n    :global(body) {\n        min-height: 100vh;\n        background-color: #14bdac;\n        padding: 0;\n        margin: 0;\n        font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,\"Noto Sans\",sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n        font-size: 1rem;\n        font-weight: 400;\n        line-height: 1.5;\n        color:#212529;\n        text-align: left;\n    }\n\n    svg {\n        width: 100%;\n        height: auto;\n        max-height: 100vh;\n    }\n\n    .app {\n        display: flex;\n    }\n\n    .board {\n        flex: 1;\n    }\n\n    @media (orientation: landscape) {\n        .app {\n            flex-direction: row;\n        }\n    }\n\n    @media (orientation: portrait) {\n        .app {\n            flex-direction: column;\n        }\n    }\n</style>",
    "<script>\n    import { onMount } from 'svelte';\n    import { createTweenedStore } from '../tweened-store';\n    import Cross from './Cross.svelte';\n    import Circle from './Circle.svelte';\n    import { CROSS, CIRCLE, EMPTY_STRING } from '../constants';\n\n    export let finished = false;\n    export let winner = \"\";\n\n    const textY = createTweenedStore(300);\n\n    onMount(() => {\n        $textY = 200;\n    });\n\n</script>\n\n<g class:show=\"{finished}\">\n{#if finished}\n{#if winner === EMPTY_STRING}\n    <Cross x=\"{50}\" y=\"{50}\" animate=\"{false}\"></Cross>\n    <Circle x=\"{150}\" y=\"{50}\" animate=\"{false}\"></Circle>\n    <text text-anchor=\"middle\" x=\"150\" y=\"{$textY}\">Draw!</text>\n{:else}\n    {#if winner === CROSS}\n    <Cross x=\"{100}\" y=\"{50}\" animate=\"{false}\"></Cross>\n    {/if}\n    {#if winner === CIRCLE}\n    <Circle x=\"{100}\" y=\"{50}\" animate=\"{false}\"></Circle>\n    {/if}\n    <text text-anchor=\"middle\" x=\"150\" y=\"{$textY}\">Won!</text>\n{/if}\n{/if}\n</g>\n\n<style>\ng {\n    transform: translateY(100%);\n    transform-origin: center top;\n    will-change: transform;\n    transition: all 0.3s ease-in;\n    transition-delay: 1s;\n}\n.show {\n    transform: translateY(0);\n}\n\ntext {\n    font-size: 4rem;\n    font-weight: 700;\n}\n</style>",
    "<script>\n    import Button from './Button.svelte';\n    export let onReset;\n</script>\n\n<div>\n    <Button onClick=\"{onReset}\">New Game</Button>\n</div>\n\n<style>\ndiv {\n    padding: 1em;\n    text-align: center;\n}\n</style>",
    "<script>\n    import { CROSS, CIRCLE } from '../constants';\n    import Button from './Button.svelte';\n    import Cross from './Cross.svelte';\n\n    export let player = '';\n    export let hasHistory = false;\n    export let onUndo;\n</script>\n\n<div class=\"c\">\n    <div>\n        Next Move:\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" width=\"64\" height=\"64\">\n            {#if player === CROSS}\n            <g stroke=\"#545454\" stroke-width=\"10\">\n                <line x1=\"75\" y1=\"25\" x2=\"25\" y2=\"75\"></line>\n                <line x1=\"25\" y1=\"25\" x2=\"75\" y2=\"75\"></line>\n            </g>\n            {/if}\n            {#if player === CIRCLE}\n            <circle cx=\"50\" cy=\"50\" r=\"25\" stroke=\"#f2ebd3\" stroke-width=\"10\" fill=\"none\"></circle>\n            {/if}\n        </svg>\n    </div>\n    <Button onClick=\"{onUndo}\" hidden=\"{!hasHistory}\">Undo Last Move</Button>\n</div>\n\n<style>\n    .c {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: .75rem 1.25rem;\n        margin: 0.5rem 0;\n    }\n\n    svg {\n        vertical-align: middle;\n    }\n</style>",
    "<script>\n    import { onDestroy } from 'svelte';\n    import Grid from './Grid.svelte';\n    import Button from './BoardButton.svelte';\n    import Cross from './Cross.svelte';\n    import Circle from './Circle.svelte';\n    import Strike from './Strike.svelte';\n    import { EMPTY_STRING, CROSS, CIRCLE } from '../constants';\n\n    export let board = [];\n    export let finished = false;\n    export let winningPattern = [];\n    export let onComplete = function () { }\n    export let onSelect = function () { }\n\n    $: if (finished) {\n        setTimeout(onComplete, 2000);\n    }\n</script>\n\n<g class:hide={finished}>\n    <Grid />\n    <g fill=\"transparent\">\n        {#each board as label, index}\n        {#if label === EMPTY_STRING}\n            <Button \n                x=\"{(index %3) * 100}\" \n                y=\"{Math.floor(index /3) * 100}\" \n                onClick=\"{()=> onSelect(index)}\" />\n        {/if}\n        {#if label === CROSS}\n            <Cross x=\"{(index %3) * 100}\" y=\"{Math.floor(index /3) * 100}\" />\n        {/if}\n        {#if label === CIRCLE}\n            <Circle x=\"{(index %3) * 100}\" y=\"{Math.floor(index /3) * 100}\" />\n        {/if}\n    {/each}\n    </g>\n    {#if winningPattern.length === 3}\n        <Strike pattern=\"{winningPattern}\" />\n    {/if}\n</g>\n\n<style>\ng {\n    transform: translateY(0);\n    transform-origin: center top;\n    will-change: transform;\n    transition: all 0.3s ease-in;\n    transition-delay: 1s;\n}\n.hide {\n    transform: translateY(-100%);\n}\n</style>",
    "<script>\n    export let onClick;\n    export let hidden = false;\n</script>\n\n<button type=\"button\" on:click=\"{onClick}\" class:hidden>\n    <slot></slot>\n</button>\n\n<style>\n    button {\n        font-size: 1rem;\n        border: 1px solid rgba(238, 238, 238, 0.3);\n        background-color: rgba(238, 238, 238, 0.5);\n        border-radius: 3px;\n        padding: 0.5rem 0.75rem;\n        cursor: pointer;\n    }\n\n    button:focus{\n        border-color: #fff;\n        background-color: rgba(238, 238, 238, 0.7);\n    }\n\n    button * {\n        pointer-events: none;\n    }\n\n    .hidden {\n        visibility: hidden;\n    }\n</style>",
    "<script>\n    export let x = 0;\n    export let y = 0;\n    export let onClick;\n</script>\n\n<rect width=\"100\" height=\"100\" x=\"{x}\" y=\"{y}\" on:click=\"{onClick}\" />\n\n<style>\nrect {\n    cursor: pointer;\n}\n</style>"
  ],
  "names": [],
  "mappings": "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"
}